<?xml version="1.0" encoding="UTF-8" ?>

<Section xmlns="urn:com.io7m.structural:8:0"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         title="Notational Conventions">

  <Subsection title="Gallina/Coq">
    <Paragraph>
      The formal specification described here is written in the
      <LinkExternal target="https://coq.github.io/doc/master/refman/">Gallina specification language of the Coq theorem
        prover</LinkExternal>. The language is a total, pure-functional, dependently-typed language allowing for
      describing systems in rigorous detail including machine-checked proofs of various chosen properties.
    </Paragraph>
    <Paragraph>
      Readers are not expected to be able to understand the bodies of the proof texts, and doing so is not in any case
      required. As long as one can understand the meaning of the <Term type="term">propositions</Term> being expressed,
      it suffices to trust that the proofs are correct as they are all machine-checked whenever the specification is
      published.
    </Paragraph>
    <Paragraph>
      The full sources of the entire specification are published <Link target="385c9d95-200d-4e83-8f2e-8b7e50b8ded3">
      at the end of this book</Link>.
    </Paragraph>
  </Subsection>

  <Subsection title="Unicode">
    <Paragraph>
      The specification makes reference to the
      <LinkExternal target="https://www.unicode.org">Unicode</LinkExternal>
      character set which, at the time of writing, is at version 15.0.0. The specification often references specific
      Unicode characters, and does so using the standard notation <Term type="constant">U+NNNN</Term>, where <Term type="constant">
      N
    </Term> represents a hexadecimal digit. For example,
      <Term type="constant">U+03BB</Term>
      corresponds to the lowercase lambda symbol
      <Term type="constant">Î»</Term>.
    </Paragraph>
  </Subsection>

  <Subsection title="EBNF">
    <Paragraph>
      The specification gives grammar definitions in
      <Term type="package">ISO/IEC 14977:1996</Term>
      Extended Backus-Naur form.
    </Paragraph>
    <Paragraph>
      Because EBNF was designed prior to the existence of Unicode, it is necessary to extend the syntax to be able to
      refer to Unicode characters in grammar definitions. This specification makes use of the standard unicode
      <Term type="constant">U+NNNN</Term>
      syntax in grammar definitions, to refer to specific Unicode characters. It also makes use of the syntax <Term type="constant">
      \p{t}
    </Term> which should be understood to represent any Unicode character with the property <Term type="constant">
      t</Term>. For example,
      <Term type="constant">\p{Lowercase_Letter}</Term>
      describes the set of characters that are both letters and are lowercase. The syntax
      <Term type="constant">\P{t}</Term>
      should be understood as the negation of <Term type="constant">\p{t}</Term>; it describes the set of characters
      without the property <Term type="constant">t</Term>.
    </Paragraph>
  </Subsection>

  <Subsection title="S-Expressions" id="e8022684-e338-44cf-a401-d69cc70f695e">
    <Paragraph>
      The <Term type="package">medrina</Term> policy language uses <Term type="term">s-expressions</Term> as the base
      for all syntax. An s-expression is described by the following EBNF grammar:
    </Paragraph>
    <FormalItem title="S-Expression Syntax">
      <Verbatim>
        <xi:include href="sexpr.ebnf"
                    parse="text"/>
      </Verbatim>
    </FormalItem>
    <Paragraph>
      As shown, the <Term type="package">medrina</Term> language uses an extension of basic s-expressions that allow
      for the optional use of either square brackets or parentheses to increase the readability of large nested
      expressions. These should be treated as interchangeable, but must be correctly balanced as shown by the grammar.
      For example, the expression <Term type="expression">[]</Term> is semantically equivalent to
      <Term type="expression">()</Term>, but the expression <Term type="expression">[)</Term> is invalid.
    </Paragraph>
  </Subsection>

</Section>